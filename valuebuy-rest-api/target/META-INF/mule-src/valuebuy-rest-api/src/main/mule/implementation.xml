<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="9aaf5eaa-6d67-4457-9d89-45f4fbc695bb" >
		<http:listener-connection host="0.0.0.0" port="${secure::http.port}" />
	</http:listener-config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="4f426e27-e9c1-4ae0-827b-ffb5275a8c77" >
		<db:my-sql-connection host="${secure::db.host}" port="${secure::db.port}" user="${secure::db.user}" password="${secure::db.password}" database="${secure::db.database}" />
	</db:config>
	<secure-properties:config name="Secure_Properties_Config" doc:name="Secure Properties Config" doc:id="862491ef-6204-469f-ba64-214e662b99dc" file="encrypted-app-${env}.properties" key="${enc.key}" />
	<global-property doc:name="Global Property" doc:id="b00c846f-48e7-4796-8a65-6e693717b6a8" name="env" value="dev" />
	<global-property doc:name="Global Property" doc:id="344fe1d0-7a62-4355-8975-ad5ae85b5c82" name="enc.key" value="mulesofttraining" />
	<flow name="consumerGetFlowImpl" doc:id="d1774600-62f2-43ba-b396-6de0f95e3bbf" >
		<db:select doc:name="Select" doc:id="507bf2a9-3bfb-4195-8b14-cf44e83b079e" config-ref="Database_Config">
			<db:sql><![CDATA[select * from product where category= :category or brand= :brand or price <= :price]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	category: attributes.queryParams.category default '%',
	brand: attributes.queryParams.brand default '%',
	price: attributes.queryParams.price default '%'
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="267b4511-6f7c-4629-adc3-9b1048eb3698" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	pid: payload01.pid,
	pname: payload01.pname default "",
	brand: payload01.brand default "",
	category: payload01.category default "",
	price: payload01.price default 0,
	stock: payload01.stock default 0,
	review: payload01.review default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="345ce47e-6dd1-4977-847b-f3081e2cdbb8" message="End of the get product consumer flow"/>
	</flow>
	<flow name="consumerGetbyPidImpl" doc:id="108a9442-6d24-4c0b-bcf3-63d89e53b668" >
		<db:select doc:name="Select" doc:id="c53be285-1835-48a1-843f-199efbcb73d7" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from product where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="3ac7823b-c567-4250-9e0d-99258c6dcfc3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var data = payload map ( payload01 , indexOfPayload01 ) -> {
	pid: payload01.pid,
	pname: payload01.pname default "",
	brand: payload01.brand default "",
	category: payload01.category default "",
	price: payload01.price default 0,
	stock: payload01.stock default 0,
	review: payload01.review default 0
}
---
data[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e844f2c6-2d2c-43d1-8cff-5a9c14810fd5" message="End of consumer get by Pid"/>
	</flow>
	<flow name="postProductBySellerImpl" doc:id="26a826d8-c5d9-43a9-adc6-9c9b6228aa24" >
		<db:insert doc:name="Insert" doc:id="26b5009e-124c-46bc-9328-55a084cb38b2" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into product(pid,pname, brand , category ,price, stock ,review) values(:pid, :pname, :brand , :category, :price, :stock ,:review)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: payload.pid,
	pname: payload.pname, 
	brand: payload.brand, 
	category: payload.category,
	price: payload.price, 
	stock: payload.stock,
	review: payload.review
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Transform Message" doc:id="009ed95f-c5b0-42b6-add9-c6211eb55d91" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is added"
			else
				"Product not added"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="a3ad9eba-663d-40f5-a937-a7d206d51998" message="end of the flow, product added"/>
	</flow>
	<flow name="SellerGetbyPidImpl" doc:id="fe92aa1b-72ee-4e38-a4c0-8a0edbee70de" >
		<db:select doc:name="Select" doc:id="e73237e5-3862-4b4b-9c61-089e18174172" config-ref="Database_Config" >
			<db:sql ><![CDATA[select * from product where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="9cc36bc9-494b-42ba-afc0-ec7e730cb0f7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var data = payload map ( payload01 , indexOfPayload01 ) -> {
	pid: payload01.pid,
	pname: payload01.pname default "",
	brand: payload01.brand default "",
	category: payload01.category default "",
	price: payload01.price default 0,
	stock: payload01.stock default 0,
	review: payload01.review default 0
}
---
data[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="89142737-1c32-47a7-a613-54dc24944fff" message="End of seller get by Pid" />
	</flow>
	<flow name="putSellerByPidImpl" doc:id="e1306fc1-44a6-44e8-94a6-ee3eea1384f3" >
		<db:update doc:name="Update" doc:id="1613706a-7ee1-4e85-8c90-28f30c2a3d8c" config-ref="Database_Config">
			<db:sql ><![CDATA[update product set pname= :pname, brand= :brand , category= :category ,price= :price, stock= :stock ,review= :review where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid,
	pname: payload.pname, 
	brand: payload.brand, 
	category: payload.category,
	price: payload.price, 
	stock: payload.stock,
	review: payload.review
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="b329685c-5c7c-47f2-84f5-9b72ef290b0d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is updated"
			else
				"Product not updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3c7bf620-10be-448f-bd68-0e10293e89f5" message="End of the seller put by Pid flow" />
	</flow>
	<flow name="deleteSellerByPidImpl" doc:id="9afc5bba-b188-4944-a66a-904c06acf1fd" >
		<db:delete doc:name="Delete" doc:id="f20e17e3-b48a-44f1-8304-3673391d4199" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from product where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="00fd5033-a508-4ab2-a117-1fd82529cce7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is not deleted"
			else
				"Product is deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e6926396-74b3-4aa8-820f-a99c80e2525b" message="End of the Seller delete by Pid flow" />
	</flow>
	<flow name="getAdminUserTypeImpl" doc:id="7828b406-fd82-425f-a205-dd11b6772b78" >
		<db:select doc:name="Select" doc:id="4db3ec7d-e122-4b17-870a-d9bb49ec8eea" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from users where userType= :userType]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userType: attributes.uriParams.userType
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="21bacceb-5918-4469-99c9-05b653bb6ecb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::util::Values
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	userId: payload01.userId,
	UserName: payload01.userName default "",
	password: payload01.password default "",
	userType: payload01.userType default ""
}
mask field("password") with "*****"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2ee7ba3e-8776-47b0-b546-260aaf875ccd" message="end of the admin flow get by usertype"/>
	</flow>
	<flow name="adminPutByuseridImpl" doc:id="7a799f7d-7304-4bfb-b356-959bf92e823d" >
		<db:update doc:name="Update" doc:id="4e1dee84-6bad-4b64-9e45-282df4210310" config-ref="Database_Config" >
			<db:sql ><![CDATA[update users set userName= :UserName,password= :password where userId= :userId and userType= :userType]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userId: attributes.uriParams.userId,
	userType: attributes.uriParams.userType,
	UserName: payload.UserName, 
	password: payload.password
	
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="f710f4b7-f2be-42ac-a79a-5c8e2f759ea8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"User is updated"
			else
				"User not updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b06dc6f3-36b9-4a65-9351-2077b592ddfd" message="End of the Admin put by UserId flow" />
	</flow>
	<flow name="AdmindeleteByuseridImpl" doc:id="31ef7f9d-919f-498f-b408-d6a1c52a107c" >
		<db:delete doc:name="Delete" doc:id="bed49b52-1834-4148-8cb8-ed7bfefa9d15" config-ref="Database_Config" >
			<db:sql ><![CDATA[delete from users where userId= :userId and userType= :userType]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userId: attributes.uriParams.userId,
	userType: attributes.uriParams.userType
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="257e6967-546c-4097-8ecf-addd7c7c772d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"User is not deleted"
			else
				"User is deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1344a770-bca1-4852-a216-92af5f015e95" message="End of the Admin delete by UserId flow"/>
	</flow>
	<flow name="AdminpostUserImpl" doc:id="5b31e96f-d9d1-4d31-b0f9-bf3e7854db8f" >
		<db:insert doc:name="Insert" doc:id="4afc5e0a-61ce-4f87-bd72-c8cc8a138a8c" config-ref="Database_Config" >
			<db:sql ><![CDATA[insert into users(userId,userName,password,userType) values(:userId, :UserName, :password , :userType)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userId: payload.userId,
	UserName: payload.UserName, 
	password: payload.password, 
	userType: payload.userType
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Transform Message" doc:id="cea41bf6-9700-48e0-a5a6-7dafddc2650c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"User is added"
			else
				"User not added"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="38c6fca1-6809-4b1a-8a89-0a0fccecf2f5" message="end of the flow, user added by Admin" />
	</flow>
	<flow name="AdminpostProductImpl" doc:id="66637f23-4bbb-4486-8692-9b8e968f71ed" >
		<db:insert doc:name="Insert" doc:id="1e4f8f97-4fc4-4e93-8780-38a164f5876e" config-ref="Database_Config" >
			<db:sql ><![CDATA[insert into product(pid,pname, brand , category ,price, stock ,review) values(:pid, :pname, :brand , :category, :price, :stock ,:review)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: payload.pid,
	pname: payload.pname, 
	brand: payload.brand, 
	category: payload.category,
	price: payload.price, 
	stock: payload.stock,
	review: payload.review
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Transform Message" doc:id="1738d2fc-5572-4b7d-8756-aea7ac66dda9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is added"
			else
				"Product not added"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="515dcf31-3b87-4d14-9204-c0c2e2c69387" message="end of the flow, product added by admin" />
	</flow>
	<flow name="AdminGetbyPidImpl" doc:id="923d1732-12a0-4906-b6c9-08dfc9baabb5" >
		<db:select doc:name="Select" doc:id="a949cbf8-cb74-443f-8f1f-360e57e95ae5" config-ref="Database_Config" >
			<db:sql ><![CDATA[select * from product where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="a2c66799-84e3-40a1-9599-8ffc0fbe0273" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var data = payload map ( payload01 , indexOfPayload01 ) -> {
	pid: payload01.pid,
	pname: payload01.pname default "",
	brand: payload01.brand default "",
	category: payload01.category default "",
	price: payload01.price default 0,
	stock: payload01.stock default 0,
	review: payload01.review default 0
}
---
data[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cb98cca4-dbf4-4f0d-b67b-7a1eb4e9f84f" message="End of admin get by Pid" />
	</flow>
	<flow name="putAdminByPidImpl" doc:id="37b13f96-5feb-4bfa-910d-c24e519aa469" >
		<db:update doc:name="Update" doc:id="f1c7dfd1-ed87-4754-a8a3-f8e27008c075" config-ref="Database_Config" >
			<db:sql ><![CDATA[update product set pname= :pname, brand= :brand , category= :category ,price= :price, stock= :stock ,review= :review where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid,
	pname: payload.pname, 
	brand: payload.brand, 
	category: payload.category,
	price: payload.price, 
	stock: payload.stock,
	review: payload.review
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="3ce4243e-9a7f-4347-8323-b57e99579af9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is updated"
			else
				"Product not updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="86d783b7-d48e-4be2-8d33-842072620d1a" message="End of the Admin put by Pid flow"/>
	</flow>
	<flow name="AdmingetByuserIdImpl" doc:id="3d86afd6-2ed9-470e-8fba-b75519f33ec9" >
		<db:select doc:name="Select" doc:id="4cb56f27-b7df-476d-9cf7-ac8571b69bff" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from users where userId= :userId and userType= :userType]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	userId: attributes.uriParams.userId,
	userType: attributes.uriParams.userType
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="838a66e7-d3b3-494e-8818-377ee660a86e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var data = payload map ( payload01 , indexOfPayload01 ) -> {
	userId: payload01.userId,
	UserName: payload01.userName default "",
	password: payload01.password default "",
	userType: payload01.userType default ""
}
---
data[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e4b247be-f629-4947-9533-174bd47698fc" message="End of the admin get by userId flow"/>
	</flow>
	<flow name="AdmindeleteByPidImpl" doc:id="f4372295-cee6-4687-88de-2d29e623d354" >
		<db:delete doc:name="Delete" doc:id="3eb866dd-2e60-4784-8718-5f981b0fa1d8" config-ref="Database_Config" >
			<db:sql ><![CDATA[delete from product where pid= :pid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	pid: attributes.uriParams.pid
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="ca0f0353-ad20-4d7d-86b1-d2fb03836287" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: if(payload.affectedRows ==1)
				"Product is not deleted"
			else
				"Product is deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3b0c9ca5-abe9-4b87-9ac6-5af0fcb6461e" message="End of the Seller delete by Pid flow" />
	</flow>
</mule>